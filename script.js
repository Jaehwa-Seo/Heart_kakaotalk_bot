const scriptName = "ÎèôÍ∑∏ÎùºÎØ∏ Î¥á";
/**
 * (string) room
 * (string) sender
 * (boolean) isGroupChat
 * (void) replier.reply(message)
 * (boolean) replier.reply(room, message, hideErrorToast = false) // Ï†ÑÏÜ° ÏÑ±Í≥µÏãú true, Ïã§Ìå®Ïãú false Î∞òÌôò
 * (string) imageDB.getProfileBase64()
 * (string) packageName
 */


var preMsg={};
var blockId = {};
var tierList = JSON.parse(DataBase.getDataBase("tierList"));
var gameType = JSON.parse(DataBase.getDataBase("gametype"));
var championData = JSON.parse(DataBase.getDataBase("championdata"));
var news = JSON.parse(DataBase.getDataBase("news"));
// var news = [];

var key = DataBase.getDataBase("key");

function TierChanger(jsonTier)
{
    var tier = ""
    if(jsonTier == "CHALLENGER")
    {
        tier = "Challenger";
    }
    else if(jsonTier == "GRANDMASTER")
    {
        tier = "GrandMaster";
    }
    else if(jsonTier == "MASTER")
    {
        tier = "Master";
    }
    else if(jsonTier == "DIAMOND")
    {
        tier = "Diamond";
    }
    else if(jsonTier == "EMERALD")
    {
        tier = "Emerald";
    }
    else if(jsonTier == "PLATINUM")
    {
        tier = "Platinum";
    }
    else if(jsonTier == "GOLD")
    {
        tier = "Gold";
    }
    else if(jsonTier == "SILVER")
    {
        tier = "Silver";
    }
    else if(jsonTier == "BRONZE")
    {
        tier = "Bronze";
    }
    else if(jsonTier == "IRON")
    {
        tier = "Iron";
    }

    return tier;
}

function RankChanger(jsonRank)
{
    var rank = ""

    if(jsonRank == "I")
    {
        rank = "1";
    }
    else if(jsonRank == "II")
    {
        rank = "2";
    }
    else if(jsonRank == "III")
    {
        rank = "3";
    }
    else if(jsonRank == "IV")
    {
        rank = "4";
    }

    return rank;
}

function TierCalculator(tier)
{
    var score = 0;

    if(tier == "Bronze")
    {
        score = 400;
    }
    else if(tier == "Silver")
    {
        score = 800;
    }
    else if(tier == "Gold")
    {
        score = 1200;
    }
    else if(tier == "Platinum")
    {
        score = 1600;
    }
    else if(tier == "Emerald")
    {
        score = 2000;
    }
    else if(tier == "Diamond")
    {
        score = 2400;
    }
    else if(tier == "Master")
    {
        score = 2800;
    }
    else if(tier == "GrandMaster")
    {
        score = 2900;
    }
    else if(tier == "Challenger")
    {
        score = 3000;
    }


    return score;
}

function RankCalculator(rank)
{
    var score = 0

    if(rank == "1")
    {
        score = 300;
    }
    else if(rank == "2")
    {
        score = 200;
    }
    else if(rank == "3")
    {
        score = 100;
    }
    else if(rank == "4")
    {
        score = 0;
    }

    return score;
}

function getRiotId(nickname)
{
    var encodeNickname = encodeURI(nickname); 
     
    var data = org.jsoup.Jsoup.connect("https://kr.api.riotgames.com/lol/summoner/v4/summoners/by-name/"+ encodeNickname +"?api_key=" + key).ignoreContentType(true).ignoreHttpErrors(true)
    .get();

    var json = JSON.parse(data.text());

    return json;
}

function getRiotLeagueData(id)
{
    var data = org.jsoup.Jsoup.connect("https://kr.api.riotgames.com/lol/league/v4/entries/by-summoner/"+ id +"?api_key=" + key).ignoreContentType(true).ignoreHttpErrors(true)
    .get();

    var leagueJson = JSON.parse(data.text());

    return leagueJson;
}

function getRiotMatchId(puuid)
{
    var data = org.jsoup.Jsoup.connect("https://asia.api.riotgames.com/lol/match/v5/matches/by-puuid/" + puuid + "/ids?start=0&count=10&api_key=" + key).ignoreContentType(true).ignoreHttpErrors(true).get();

    data = JSON.parse(data.text());

    return data;
}

function getRiotMatchData(matchid)
{
    var data = org.jsoup.Jsoup.connect("https://asia.api.riotgames.com/lol/match/v5/matches/" + matchid + "?api_key=" + key).ignoreContentType(true).ignoreHttpErrors(true).get();

    data = JSON.parse(data.text());
    
    return data;
}

function lolTierInfo(nickname) {

    if(nickname.length == 2)
    {
        nickname = nickname[0] + " " + nickname[1];
    }

    var json = getRiotId(nickname);

    if(!json.status)
    {
        var id = json.id;
        var name = json.name;

        var level = "üêª ÌòÑÏû¨ Î†àÎ≤® ‚ñ∂ " + json.summonerLevel;

        var json2 = getRiotLeagueData(id)

        var solorank = "";
        var teamrank = "";

        for(var i=0;i<json2.length;i++)
        {
            var tier = TierChanger(json2[i].tier);
            var rank = RankChanger(json2[i].rank);

            if(json2[i].queueType == "RANKED_SOLO_5x5")
            {
                solorank = "üêª Í∞úÏù∏ Îû≠ÌÅ¨ ‚ñ∂ " + tier + " " + rank + " " + json2[i].leaguePoints + " LP";
                Object.keys(tierList).forEach((key) => {
                    if(name == tierList[key]["id"])
                    {
                        Log.d(name)
                        Log.d(tierList[key]["id"])
                        tierList[key]["solo"]["tier"] = tier;
                        tierList[key]["solo"]["rank"] = rank;
                        tierList[key]["solo"]["leaguepoint"] = json2[i].leaguePoints;

                        DataBase.removeDataBase("tierlist");
                        DataBase.setDataBase("tierlist",JSON.stringify(tierList));
                    }
                });
                // saveTier.push({"id" : name, "tier" : tier, "rank" : rank, "leaguepoint" : json2[i].leaguePoints});
            }
            else if(json2[i].queueType == "RANKED_FLEX_SR")
            {
                teamrank = "üêª ÏûêÏú† Îû≠ÌÅ¨ ‚ñ∂ " + tier + " " + rank + " " + json2[i].leaguePoints + " LP";

                Object.keys(tierList).forEach((key) => {
                    if(name == tierList[key]["id"])
                    {
                        Log.d(name)
                        Log.d(tierList[key]["id"])
                        tierList[key]["team"]["tier"] = tier;
                        tierList[key]["team"]["rank"] = rank;
                        tierList[key]["team"]["leaguepoint"] = json2[i].leaguePoints;

                        DataBase.removeDataBase("tierlist");
                        DataBase.setDataBase("tierlist",JSON.stringify(tierList));
                    }
                })
            }

            
        }

        if(solorank == "")
        {
            solorank = "üêª Í∞úÏù∏ Îû≠ÌÅ¨ ‚ñ∂ Îû≠ÌÅ¨ ÏóÜÏùå";
            // saveTier.push({"id" : name, "tier" : "Îû≠ÌÅ¨ ÏóÜÏùå", "rank" : 0, "leaguepoint" : 0});
        }

        if(teamrank == "")
        {
            teamrank = "üêª ÏûêÏú† Îû≠ÌÅ¨ ‚ñ∂ Îû≠ÌÅ¨ ÏóÜÏùå";
        }
        
        var result = "ÎèôÍ∑∏ÎùºÎØ∏ ÎÇòÎùº [ "+name+" ] ÎãòÏùò Ï†ïÎ≥¥ÏûÖÎãàÎã§.\n\n"+level+"\n"+solorank+"\n"+teamrank;

        
        
        return result;
    }
    else
    {
        return "Ï°¥Ïû¨ÌïòÏßÄ ÏïäÎäî ÏÜåÌôòÏÇ¨Î™ÖÏù¥ÎûòÏöî. Ïò§ÌÉÄÎ•º ÌôïÏù∏Ìïú ÌõÑ Îã§Ïãú Í≤ÄÏÉâÌï¥ Ï£ºÏÑ∏Ïöî. üò•"
    }

}

function ShowAllTier(type)
{
    var circleTierList = []
    var circleTierNoRankList = []

    var replyMessage = ""
    Object.keys(tierList).forEach((key) => {

        var score = TierCalculator(tierList[key][type]["tier"]) + RankCalculator(tierList[key][type]["rank"]) + tierList[key][type]["leaguepoint"];

        if(tierList[key][type]["tier"] != "Îû≠ÌÅ¨ ÏóÜÏùå")
            circleTierList.push([key,score]);
        else
            circleTierNoRankList.push([key]);
    });

    circleTierList.sort(function(a,b) {
        if(b[1] != a[1])
            return b[1] - a[1];
        else
            return a[0] < b[0] ? -1 : a[0] > b[0] ? 1 : 0;
    })
    Log.d(circleTierList);
    circleTierNoRankList.sort();

    for(var i=0;i<circleTierList.length;i++)
    {
        if(tierList[circleTierList[i][0]][type]["tier"] == "Master")
            replyMessage += "üíú";
        else if(tierList[circleTierList[i][0]][type]["tier"] == "Diamond")
            replyMessage += "üíô";
        else if(tierList[circleTierList[i][0]][type]["tier"] == "Emerald")
            replyMessage += "‚ù§";   
        else if(tierList[circleTierList[i][0]][type]["tier"] == "Platinum")
            replyMessage += "üíö";   
        else if(tierList[circleTierList[i][0]][type]["tier"] == "Gold")
            replyMessage += "üíõ";   
        else if(tierList[circleTierList[i][0]][type]["tier"] == "Silver")
            replyMessage += "ü§ç";   
        else if(tierList[circleTierList[i][0]][type]["tier"] == "Bronze")
            replyMessage += "ü§é";
        
        if(tierList[circleTierList[i][0]][type]["tier"] == "Master")
            replyMessage += " " + circleTierList[i][0] + " " + tierList[circleTierList[i][0]][type]["tier"] + " " + tierList[circleTierList[i][0]][type]["leaguepoint"] + " LP\n"
        else
            replyMessage += " " + circleTierList[i][0] + " " + tierList[circleTierList[i][0]][type]["tier"] + " " + tierList[circleTierList[i][0]][type]["rank"] + " " + tierList[circleTierList[i][0]][type]["leaguepoint"] + " LP\n"
    }
    for(var i=0;i<circleTierNoRankList.length;i++)
    {
        replyMessage += "üñ§ " + circleTierNoRankList[i][0] + " Îû≠ÌÅ¨ ÏóÜÏùå";
        if(i!=circleTierNoRankList.length-1)
            replyMessage += "\n";
    }

    return replyMessage;
}

function response(room, msg, sender, isGroupChat, replier, ImageDB, packageName, threadId){
    
    if(room == "ÎèôÍ∑∏ÎùºÎØ∏ Î¥á ÌÖåÏä§Ìä∏"){

        var replyMessage = ""

        var isAngry = false;

        msg = msg.trim();
   
        if (preMsg[room] == null){
            preMsg[room] = 0;
        }

        preMsg[room] = parseInt(preMsg[room]) + 1;

        

        if(msg.startsWith("ÌïòÌä∏ ÏïàÎÖï")){
            replyMessage = "ÏïàÎÖïÌïòÏÑ∏Ïöî? Ï†ÄÎäî ÎèôÍ∑∏ÎùºÎØ∏ Î°úÎ¥á ÌïòÌä∏ÏòàÏöî. üê∂";
        }
        else if(msg.startsWith("ÌïòÌä∏Ïïº")){
            replyMessage = "Ïôú Î∂àÎü¨Ïöî? üê∂";
        }
        else if(msg.startsWith("ÌïòÌä∏ Î¨ºÏñ¥")){
            replyMessage = "ÏúºÎ¶â ÏúºÎ¶â ÏúºÎ•¥Î•¥Î¶â! üí¢";
        }
        else if(msg.startsWith("ÏúºÎ¶â Ïñ¥Îïå")){
            replyMessage = "Í∞ïÏïÑÏßÄ Ï¢ÖÏ°±Ïùò ÏûêÎûë ÏúºÎ¶âÏù¥Ïïº. üê∂ ÌïòÌä∏Îäî Ïù¥Î™®Í∞Ä ÎÑàÎ¨¥ÎÑàÎ¨¥ Ï¢ãÏïÑ. üíñ";
        }
        else if(msg.startsWith("ÏΩîÌè¨ Ïñ¥Îïå")){
            replyMessage = "ÏΩîÌè¨ ÏïÑÏ†ÄÏî®Î•º Î≥¥Í≥† ÏÉùÍ∞ÅÌñàÏ£†. Ïä§ÌååÏù¥Î•º ÎãÆÏïòÏñ¥Ïöî. üòé";
        }
        else if(msg.indexOf("„Ñ±„ÖÅ„Ñ¥") != -1 || msg.indexOf("ÍµøÎ™®Îãù") != -1 || msg.indexOf("Íµ≥Î™®Îãù") != -1){
            replyMessage = "Ïò§ÎäòÎèÑ ÌñâÎ≥µÌïú ÌïòÎ£® Î≥¥ÎÇ¥ÏÑ∏Ïöî. üíï";
        }

        //////////////// Command part
        // else if(msg.startsWith("/Î™ÖÎ†πÏñ¥") || msg.startsWith("/?"))  {
        //     replyMessage += "ÌïòÌä∏Í∞Ä Î∞∞Ïö¥ Í≤É üê∂\n\n"
        //     replyMessage += "/ÎÇ†Ïî® ÏßÄÏó≠\n"
        //     replyMessage += "ÎÇ†Ïî®Î•º Ïïå Ïàò ÏûàÏñ¥Ïöî. ÎÇ¥Ïùº ÏÑúÏö∏ ÎÇ†Ïî®ÎèÑ Í≤ÄÏÉâÏù¥ Í∞ÄÎä•Ìï¥Ïöî!\n\n"

        //     replyMessage += "/ÎèôÍ∑∏ÎùºÎØ∏ Îâ¥Ïä§\n"
        //     replyMessage += "ÎèôÍ∑∏ÎùºÎØ∏ÏóêÏÑú ÏûàÎäî ÏùºÏùÑ Î≥¥Ïó¨Ï§òÏöî.\n\n"

        //     replyMessage += "/ÎèôÍ∑∏ÎùºÎØ∏ Îâ¥Ïä§ Îì±Î°ù ~~~~\n"
        //     replyMessage += "ÎèôÍ∑∏ÎùºÎØ∏ Îâ¥Ïä§Î•º Îì±Î°ùÌï† Ïàò ÏûàÏñ¥Ïöî. ~~~~ Î∂ÄÎ∂ÑÏóê ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•ÌïòÎ©¥ ÎêòÏöî.\n\n"

        //     replyMessage += "/ÎèôÍ∑∏ÎùºÎØ∏ Îâ¥Ïä§ Ï∞∏Í∞Ä 1\n"
        //     replyMessage += "Îâ¥Ïä§Ïùò Î≤àÌò∏Î•º ÏûÖÎ†•ÌïòÎ©¥ ÎÇ¥Í∞Ä ÏõêÌïòÎäî Îâ¥Ïä§Ïóê Î©§Î≤ÑÎ°ú Ï∞∏Í∞ÄÌï† Ïàò ÏûàÏñ¥Ïöî.\n\n"

        //     replyMessage += "/ÎèôÍ∑∏ÎùºÎØ∏ Îâ¥Ïä§ Ï∑®ÏÜå 1\n"
        //     replyMessage += "Îâ¥Ïä§Ïùò Î≤àÌò∏Î•º ÏûÖÎ†•ÌïòÎ©¥ ÎÇ¥Í∞Ä Ï∞∏Í∞ÄÌïú Îâ¥Ïä§Î•º Ï∑®ÏÜåÌï† Ïàò ÏûàÏñ¥Ïöî. ÏûëÏÑ±ÏûêÎäî Ï∑®ÏÜåÌï† Ïàò ÏóÜÏñ¥Ïöî.\n\n"

        //     replyMessage += "/ÎèôÍ∑∏ÎùºÎØ∏ Îâ¥Ïä§ ÏÇ≠Ï†ú 1\n"
        //     replyMessage += "Îâ¥Ïä§Ïùò Î≤àÌò∏Î•º ÏûÖÎ†•ÌïòÎ©¥ ÎÇ¥Í∞Ä ÏûëÏÑ±Ìïú Îâ¥Ïä§Î•º ÏÇ≠Ï†úÌï† Ïàò ÏûàÏñ¥Ïöî. ÏûëÏÑ±ÏûêÍ∞Ä ÏïÑÎãàÎ©¥ ÏÇ≠Ï†úÌï† Ïàò ÏóÜÏñ¥Ïöî.\n\n"

        //     replyMessage += "/ÎèôÍ∑∏ÎùºÎØ∏ Ìã∞Ïñ¥\n"
        //     replyMessage += "ÎèôÍ∑∏ÎùºÎØ∏ ÎÇòÎùº ÏÇ¨ÎûåÎì§Ïùò Ìã∞Ïñ¥Î•º Î≥¥Ïó¨Ï§òÏöî. Ìã∞Ïñ¥Îäî Î≥∏ Í≥ÑÏ†ï ÏÜîÎû≠ Ìã∞Ïñ¥ Í∏∞Ï§ÄÏù¥ÏóêÏöî. Í∞±Ïã†ÏùÑ ÏõêÌïòÎ©¥ /Î°§ Î™ÖÎ†πÏñ¥Î•º ÌÜµÌï¥ ÌïúÎ≤à Í≤ÄÏÉâÏùÑ Ìï¥ÏïºÌï¥Ïöî.\n\n"

        //     replyMessage += "/ÎèôÍ∑∏ÎùºÎØ∏ ÌÉë\n"
        //     replyMessage += "ÎèôÍ∑∏ÎùºÎØ∏ ÎÇòÎùº ÌÉë ÎùºÏù∏ÏùÑ Í∞ÄÎäî ÏÇ¨ÎûåÎì§ÏùÑ Î≥¥Ïó¨Ï§òÏöî. Î≥∏ Í≥ÑÏ†ï ÏÜîÎû≠ Ï†ÑÏ†ÅÏùÑ Í∏∞Ï§ÄÏúºÎ°ú Ï†ÅÏóàÏñ¥Ïöî.\n\n";

        //     replyMessage += "/ÎèôÍ∑∏ÎùºÎØ∏ Ï†ïÍ∏Ä\n"
        //     replyMessage += "ÎèôÍ∑∏ÎùºÎØ∏ ÎÇòÎùº Ï†ïÍ∏Ä ÎùºÏù∏ÏùÑ Í∞ÄÎäî ÏÇ¨ÎûåÎì§ÏùÑ Î≥¥Ïó¨Ï§òÏöî. Î≥∏ Í≥ÑÏ†ï ÏÜîÎû≠ Ï†ÑÏ†ÅÏùÑ Í∏∞Ï§ÄÏúºÎ°ú Ï†ÅÏóàÏñ¥Ïöî.\n\n";
            
        //     replyMessage += "/ÎèôÍ∑∏ÎùºÎØ∏ ÎØ∏Îìú\n"
        //     replyMessage += "ÎèôÍ∑∏ÎùºÎØ∏ ÎÇòÎùº ÎØ∏Îìú ÎùºÏù∏ÏùÑ Í∞ÄÎäî ÏÇ¨ÎûåÎì§ÏùÑ Î≥¥Ïó¨Ï§òÏöî. Î≥∏ Í≥ÑÏ†ï ÏÜîÎû≠ Ï†ÑÏ†ÅÏùÑ Í∏∞Ï§ÄÏúºÎ°ú Ï†ÅÏóàÏñ¥Ïöî.\n\n";

        //     replyMessage += "/ÎèôÍ∑∏ÎùºÎØ∏ Î¥á\n"
        //     replyMessage += "ÎèôÍ∑∏ÎùºÎØ∏ ÎÇòÎùº Î¥á ÎùºÏù∏ÏùÑ Í∞ÄÎäî ÏÇ¨ÎûåÎì§ÏùÑ Î≥¥Ïó¨Ï§òÏöî. Î≥∏ Í≥ÑÏ†ï ÏÜîÎû≠ Ï†ÑÏ†ÅÏùÑ Í∏∞Ï§ÄÏúºÎ°ú Ï†ÅÏóàÏñ¥Ïöî.\n\n";

        //     replyMessage += "/ÎèôÍ∑∏ÎùºÎØ∏ ÏÑúÌè¨ÌÑ∞\n"
        //     replyMessage += "ÎèôÍ∑∏ÎùºÎØ∏ ÎÇòÎùº ÏÑúÌè¨ÌÑ∞ ÎùºÏù∏ÏùÑ Í∞ÄÎäî ÏÇ¨ÎûåÎì§ÏùÑ Î≥¥Ïó¨Ï§òÏöî. Î≥∏ Í≥ÑÏ†ï ÏÜîÎû≠ Ï†ÑÏ†ÅÏùÑ Í∏∞Ï§ÄÏúºÎ°ú Ï†ÅÏóàÏñ¥Ïöî.\n\n";

        //     replyMessage += "/Î°§ ÏïÑÏù¥Îîî\n"
        //     replyMessage += "ÏïÑÏù¥ÎîîÏùò Î†àÎ≤®Í≥º Îû≠ÌÅ¨ Ìã∞Ïñ¥Î•º ÏïåÎ†§Ï§òÏöî.\n\n";

        //     replyMessage += "/Ïò§ÎäòÏùò Ïö¥ÏÑ∏\n"
        //     replyMessage += "ÏûêÎ™ΩÎãòÏùò Ïö¥ÏÑ∏Î•º ÎåÄÏã† ÏïåÎ†§Ï§òÏöî.\n\n";

        //     replyMessage += "/Ï†ÑÏ†Å ÏïÑÏù¥Îîî\n"
        //     replyMessage += "ÏµúÍ∑º 10ÌåêÏùò Ï†ÑÏ†ÅÍ≥º ÏäπÎ•†ÏùÑ ÏïåÎ†§Ï§òÏöî.\n\n";
            
        //     // /ÎÇ†Ïî®, ÎèôÍ∑∏ÎùºÎØ∏ Îâ¥Ïä§, /ÎèôÍ∑∏ÎùºÎØ∏ Îâ¥Ïä§ Ï∞∏Í∞Ä, /ÎèôÍ∑∏ÎùºÎØ∏ Îâ¥Ïä§ Îì±Î°ù, /ÎèôÍ∑∏ÎùºÎØ∏ Îâ¥Ïä§ Ï∑®ÏÜå, /ÎèôÍ∑∏ÎùºÎØ∏ Îâ¥Ïä§ ÏÇ≠Ï†ú 1, /Ïò§ÎäòÏùò Ïö¥ÏÑ∏, /ÎèôÍ∑∏ÎùºÎØ∏ Ìã∞Ïñ¥, /ÎèôÍ∑∏ÎùºÎØ∏ ÎùºÏù∏Î≥Ñ,
        // }

        else if(msg.startsWith("/ÎÇ†Ïî®"))  {
        
            let weather = msg.slice(4);
        
            if (isNaN(weather))  {
                try {
        
                    let url = org.jsoup.Jsoup.connect("https://www.google.com/search?q=" + weather + " ÎÇ†Ïî®").get();
        
                    let resultDC = url.select("#wob_dc").text(); //ÏÉÅÌÉú
                    let resultPP = url.select("#wob_pp").text(); //Í∞ïÏàòÌôïÎ•†
                    let resultTM = url.select("#wob_tm").text(); //Ïò®ÎèÑ
                    let resultWS = url.select("#wob_ws").text(); //ÌíçÏÜç
                    let resultHM = url.select("#wob_hm").text(); //ÏäµÎèÑ
        
                    if(resultDC=="")
                        replyMessage = weather + "Ïùò ÎÇ†Ïî®Îäî ÌïòÌä∏Í∞Ä Ïïå Ïàò ÏóÜÏñ¥Ïöî. üòØ";
                    else
                        replyMessage = "ÌòÑÏû¨ ÏãúÏ†ê "+weather+" ÎÇ†Ïî® Ï†ïÎ≥¥ÏòàÏöî. üê∂\n\nÎÇ†Ïî® : " + resultDC + "\nÏò®ÎèÑ : " + resultTM + "¬∞C\nÍ∞ïÏàò ÌôïÎ•† : " + resultPP + "\nÌíçÏÜç : " + resultWS + "\nÏäµÎèÑ : " + resultHM;
                }catch(e)  {
                    replyMessage = weather + "Ïùò ÎÇ†Ïî®Îäî ÌïòÌä∏Í∞Ä Ïïå Ïàò ÏóÜÏñ¥Ïöî. üòØ";
                }
        
            } else {
                replyMessage = "ÏõêÌïòÎäî ÏßÄÏó≠ÏùÑ Îí§Ïóê Ï†ÅÏñ¥Ï§òÏöî. üòâ\nÏòàÏãú) /ÎÇ†Ïî® ÏÑúÏö∏";
            }
        }
        else if(msg.startsWith("/Îâ¥Ïä§"))
        {
            if(msg == "/Îâ¥Ïä§")
            {
                //show news
                replyMessage = "ÎèôÍ∑∏ÎùºÎØ∏ ÏùºÍ∞Ñ Îâ¥Ïä§ üåª\n\n"

                news = JSON.parse(DataBase.getDataBase("news"));

                if(news.length != 0)
                {
                    for(var i=0;i<news.length;i++)
                    {
                        replyMessage += (i+1).toString() + ". " + news[i].news + " - " + news[i].writer + "\n[";
                
                        for(var j=0;j<news[i].participants.length;j++)
                        {
                            replyMessage += news[i].participants[j];
                            if(j!= news[i].participants.length-1)
                                replyMessage += ", ";
                            else
                                replyMessage += "]\n"
                        }

                        if(i!= news.length-1)
                            replyMessage += "\n";
                    }
                }
                else
                {
                    replyMessage = "Ïò§ÎäòÏùò Îâ¥Ïä§Í∞Ä ÏïÑÏßÅ ÏóÜÏñ¥Ïöî. üò™"
                }
            }
            else
            {
                var info = msg.split(' ');

                if(info[1] == "Îì±Î°ù")
                {
                    if(info[2] != undefined)
                    {
                        var body = msg.replace("/Îâ¥Ïä§ Îì±Î°ù ","");
                        
                        var cnt = 0;
                        for(var i=0;i<news.length;i++)
                        {
                            if(news[i].writer == sender)
                            {
                                cnt++;
                            }
                        }

                        if(cnt < 2)
                        {

                            news.push({writer : sender, news : body,participants : [sender]});

                            DataBase.removeDataBase("news");
                            DataBase.setDataBase("news",JSON.stringify(news));

                            replyMessage = "ÏÉàÎ°úÏö¥ Îâ¥Ïä§Î•º Îì±Î°ùÌñàÏäµÎãàÎã§. üåà"
                        }
                        else
                        {
                            Log.d(news);
                            Log.d(cnt);
                            replyMessage = "Îâ¥Ïä§Îäî 2Í∞úÍπåÏßÄ Îì±Î°ùÏù¥ Í∞ÄÎä•Ìï¥Ïöî. üê∑"
                        }
                    }
                    else
                    {
                        replyMessage = "ÌòïÏãùÏùÑ ÌôïÏù∏ÌïòÍ≥† Îã§Ïãú ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî. /Îâ¥Ïä§ Îì±Î°ù ~~~~ "
                    }
                }

                //Ï∞∏Í∞Ä
                else if(info[1] == "Ï∞∏Í∞Ä")
                {
                    var news_num = Number(msg.replace("/Îâ¥Ïä§ Ï∞∏Í∞Ä ",""));

                    if(info[2] != undefined && Number.isInteger(news_num))
                    {
                        
                        if(news[news_num-1] == undefined)
                        {
                            replyMessage = "Îâ¥Ïä§Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§. Î≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî."
                        }
                        else if(news[news_num-1].participants.includes(sender))
                        {
                            replyMessage = "Ïù¥ÎØ∏ Îâ¥Ïä§Ïóê Ï∞∏Í∞ÄÌïòÍ≥† ÏûàÏäµÎãàÎã§."
                        }
                        else
                        {
                            news[news_num-1].participants.push(sender);

                            DataBase.removeDataBase("news");
                            DataBase.setDataBase("news",JSON.stringify(news));

                            replyMessage = news_num + "Î≤à Îâ¥Ïä§Ïóê "+sender+"ÎãòÏù¥ Ï∞∏Í∞ÄÌïòÏòÄÏäµÎãàÎã§."
                        }
                    }
                    else
                    {
                        replyMessage = "ÌòïÏãùÏùÑ ÌôïÏù∏ÌïòÍ≥† Îã§Ïãú ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî. /Îâ¥Ïä§ Ï∞∏Í∞Ä 1"
                    }
                }
                else if(info[1] == "Ï∑®ÏÜå")
                {
                    var news_num = Number(msg.replace("/Îâ¥Ïä§ Ï∑®ÏÜå ",""));

                    if(info[2] != undefined && Number.isInteger(news_num))
                    {
                        if(news[news_num-1] == undefined)
                        {
                            replyMessage = "Îâ¥Ïä§Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§. Î≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî."
                        }
                        else
                        {
                            if(news[news_num-1].participants.includes(sender) && news[news_num-1].writer != sender)
                            {
                                for(var i = 0; i < news[news_num-1].participants.length; i++){ 
                                    if (news[news_num-1].participants[i] === sender) { 
                                        news[news_num-1].participants.splice(i, 1); 
                                        break;
                                    }
                                }
                                DataBase.removeDataBase("news");
                                DataBase.setDataBase("news",JSON.stringify(news));

                                replyMessage = news_num + "Î≤à Îâ¥Ïä§Ïóê "+sender+"ÎãòÏù¥ Ï∞∏Í∞Ä Ï∑®ÏÜåÌïòÏÖ®ÏäµÎãàÎã§."
                                
                            }
                            else if(news[news_num-1].writer == sender)
                            {
                                replyMessage = "Îâ¥Ïä§Ïùò ÏûëÏÑ±ÏûêÎäî Ï∞∏Í∞ÄÎ•º Ï∑®ÏÜåÌï† Ïàò ÏóÜÏäµÎãàÎã§."
                            }
                            else
                            {
                                replyMessage = "Îâ¥Ïä§Ïóê Ï∞∏Í∞ÄÌïòÍ≥† ÏûàÏßÄ ÏïäÏäµÎãàÎã§."
                            }
                        }
                    }
                    else
                    {
                        replyMessage = "ÌòïÏãùÏùÑ ÌôïÏù∏ÌïòÍ≥† Îã§Ïãú ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî. /Îâ¥Ïä§ Ï∑®ÏÜå 1"
                    }
                }
                else if(info[1] == "ÏÇ≠Ï†ú")
                {
                    var news_num = Number(msg.replace("/Îâ¥Ïä§ ÏÇ≠Ï†ú ",""));
                    if(info[2] != undefined && Number.isInteger(news_num))
                    {
                        if(news[news_num-1] == undefined)
                        {
                            replyMessage = "Îâ¥Ïä§Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§. Î≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî."
                        }
                        else if(news[news_num-1].writer == sender)
                        {
                            news.splice(news_num-1, 1); 

                            DataBase.removeDataBase("news");
                            DataBase.setDataBase("news",JSON.stringify(news));

                            replyMessage = news_num + "Î≤à Îâ¥Ïä§Î•º ÏÇ≠Ï†úÌñàÏñ¥Ïöî."
                        }
                        else
                        {
                            replyMessage = "Îâ¥Ïä§Ïùò ÏûëÏÑ±ÏûêÍ∞Ä ÏïÑÎãàÎ©¥ ÏÇ≠Ï†úÌï† Ïàò ÏóÜÏäµÎãàÎã§."
                        }
                    }
                    else
                    {
                        replyMessage = "ÌòïÏãùÏùÑ ÌôïÏù∏ÌïòÍ≥† Îã§Ïãú ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî. /Îâ¥Ïä§ ÏÇ≠Ï†ú 1"
                    }
                }
                else if(info[1] == "ÏàòÏ†ï")
                {
                    var news_num = Number(info[2]);
                    var body = msg.replace("/Îâ¥Ïä§ ÏàòÏ†ï " + info[2] + " ","");
                    if(info[2] != undefined && Number.isInteger(news_num) && info[4] != undefined)
                    {
                        if(news[news_num-1] == undefined)
                        {
                            replyMessage = "Îâ¥Ïä§Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§. Î≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî."
                        }
                        else if(news[news_num-1].writer == sender)
                        {
                            news[news_num-1].news = body;

                            DataBase.removeDataBase("news");
                            DataBase.setDataBase("news",JSON.stringify(news));

                            replyMessage = news_num + "Î≤à Îâ¥Ïä§Î•º ÏàòÏ†ïÌñàÏñ¥Ïöî."
                        }
                        else
                        {
                            replyMessage = "Îâ¥Ïä§Ïùò ÏûëÏÑ±ÏûêÍ∞Ä ÏïÑÎãàÎ©¥ ÏàòÏ†ïÌï† Ïàò ÏóÜÏäµÎãàÎã§."
                        }
                    }
                    else
                    {
                        replyMessage = "ÌòïÏãùÏùÑ ÌôïÏù∏ÌïòÍ≥† Îã§Ïãú ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî. /Îâ¥Ïä§ ÏàòÏ†ï 1 ÏàòÏ†ïÌï† ÎÇ¥Ïö©"
                    }
                }
                else if(info[1] == "Ï¥àÍ∏∞Ìôî")
                {
                    news = []
                    DataBase.removeDataBase("news");
                    DataBase.setDataBase("news",JSON.stringify(news));
                }
            }
        }
        else if(msg.startsWith("/ÎèôÍ∑∏ÎùºÎØ∏ ÌÉë")){
            replyMessage = "ÎèôÍ∑∏ÎùºÎØ∏ ÌÉë ÏÜåÍ∞ú üê∑\n\n1Íµ∞ üíå ÎßπÎèÖ ÏΩîÌè¨ ÌÅ¥Î¶Ω ÌååÎã≠\n2Íµ∞ üíå ÎßêÎûë Î™ΩÎéÖ ÏäπÏó∞ ÏûêÎ™Ω ÌïòÎëî";
        }
        else if(msg.startsWith("/ÎèôÍ∑∏ÎùºÎØ∏ Ï†ïÍ∏Ä")){
            replyMessage = "ÎèôÍ∑∏ÎùºÎØ∏ Ï†ïÍ∏Ä ÏÜåÍ∞ú üê∑\n\n1Íµ∞ üíå Îã§Ìõà ÎçòÌïÑ ÎßêÎûë Î¨∏Ïñ¥ ÎØ∏Ïûê ÌïòÍ∏∞ ÌïòÎëî\n2Íµ∞ üíå ÎßπÎèÖ ÎØºÏßÄ ÏúºÎ¶â Ïû¨Ìôî ÌååÎã≠";
        }
        else if(msg.startsWith("/ÎèôÍ∑∏ÎùºÎØ∏ ÎØ∏Îìú")){
            replyMessage = "ÎèôÍ∑∏ÎùºÎØ∏ ÎØ∏Îìú ÏÜåÍ∞ú üê∑\n\n1Íµ∞ üíå ÎßêÎûë Ïù¥Î∂à Ïû¨Ìôî ÌòÑÏù¥\n2Íµ∞ üíå Î£®ÎØ∏ ÏÑ†ÏòÅ ÏΩîÌè¨";
        }
        else if(msg.startsWith("/ÎèôÍ∑∏ÎùºÎØ∏ Î¥á") || msg.startsWith("/ÎèôÍ∑∏ÎùºÎØ∏ ÏõêÎîú")){
            replyMessage = "ÎèôÍ∑∏ÎùºÎØ∏ Î¥á ÏÜåÍ∞ú üê∑\n\n1Íµ∞ üíå Í≤∏Ïù¥ Î£®ÎØ∏ ÏäπÏó∞ ÏûêÎ™Ω Ïû¨Ìôî ÌÅ¥Î¶Ω ÌååÎã≠ ÌïòÎëî ÌòÑÏù¥\n2Íµ∞ üíå ÎØ∏Ïûê ÏÅòÏïÑ ÏΩîÌè¨";
        }
        else if(msg.startsWith("/ÎèôÍ∑∏ÎùºÎØ∏ ÏÑúÌè¨ÌÑ∞") || msg.startsWith("/ÎèôÍ∑∏ÎùºÎØ∏ ÏÑúÌèø")){
            replyMessage = "ÎèôÍ∑∏ÎùºÎØ∏ ÏÑúÌè¨ÌÑ∞ ÏÜåÍ∞ú üê∑\n\n1Íµ∞ üíå Í≤∏Ïù¥ Î£®ÎØ∏ Î™ΩÎéÖ Î¨∏Ïñ¥ ÎØºÏßÄ ÏÅòÏïÑ ÏÑ†ÏòÅ ÏäπÏó∞ ÏúºÎ¶â Ïù¥Î∂à ÏûêÎ™Ω ÌïòÍ∏∞\n2Íµ∞ üíå ÎçòÌïÑ Ïû¨Ìôî ÌòÑÏù¥";
        }
        else if(msg.equals("/ÎèôÍ∑∏ÎùºÎØ∏ ÏÜîÎû≠"))
        {
            replyMessage = "üíé ÎèôÍ∑∏ÎùºÎØ∏ Í∞úÏù∏ Îû≠ÌÅ¨ ÌòÑÌô© üíé\n\n";

            var tierType = "solo";

            replyMessage += ShowAllTier(tierType);
        }
        else if(msg.equals("/ÎèôÍ∑∏ÎùºÎØ∏ ÏûêÎû≠"))
        {
            replyMessage = "üíé ÎèôÍ∑∏ÎùºÎØ∏ ÏûêÏú† Îû≠ÌÅ¨ ÌòÑÌô© üíé\n\n";

            var tierType = "team";

            replyMessage += ShowAllTier(tierType);
        }
        else if(msg.startsWith("/ÎèôÍ∑∏ÎùºÎØ∏ ÏÉùÏùº"))
        {
            replyMessage = "üéâ ÎèôÍ∑∏ÎùºÎØ∏ ÏÉùÏùº üéâ\n‚ú® Îî∞ÎúªÌïú Îßê Î∂ÄÌÉÅÌï¥Ïöî ‚ú®\n\n01Ïõî 29Ïùº - ÌïòÎëî\n02Ïõî 28Ïùº - ÌòÑÏù¥\n06Ïõî 10Ïùº - ÏúºÎ¶â ÌÅ¥Î¶Ω\n09Ïõî 29Ïùº - ÏÑ†ÏòÅ\n10Ïõî 06Ïùº - Î£®ÎØ∏\n10Ïõî 29Ïùº - Í≤∏Ïù¥\n10Ïõî 30Ïùº - ÎßπÎèÖ\n12Ïõî 23Ïùº - ÌïòÍ∏∞\n12Ïõî 25Ïùº - Ïû¨Ìôî";
        }
        else if(msg.startsWith("/Î°§ ")){
            var result = lolTierInfo(msg.replace("/Î°§ ",""));
            replyMessage = result;
        }
        else if(msg.startsWith("/ÏïÑÏù¥ÎîîÎ≥ÄÍ≤Ω"))  {
            var info = msg.split(' ');

            if(info.length == 3)
            {
                if(tierList[info[1]] != undefined)
                {

                    tierList[info[1]].id = info[2];

                    var json = getRiotId(info[2]);

                    if(!json.status)
                    {
                        var data = getRiotLeagueData(json.id);

                        var teamflag = false;
                        var soloflag = false;

                        for(var i=0;i<data.length;i++)
                        {
                            var tier = TierChanger(data[i].tier);
                            var rank = RankChanger(data[i].rank);

                            if(data[i].queueType == "RANKED_SOLO_5x5")
                            {
                                tierList[info[1]]["solo"].tier = tier;
                                tierList[info[1]]["solo"].rank = rank;
                                tierList[info[1]]["solo"].leaguepoint = data[i].leaguePoints;

                                soloflag = true;
                            }

                            if(data[i].queueType == "RANKED_FLEX_SR")
                            {
                                tierList[info[1]]["team"].tier = tier;
                                tierList[info[1]]["team"].rank = rank;
                                tierList[info[1]]["team"].leaguepoint = data[i].leaguePoints;

                                teamflag = true;
                            }                             
                        }

                        if(!soloflag)
                        {
                            tierList[info[1]]["solo"].tier = "Îû≠ÌÅ¨ ÏóÜÏùå";
                            tierList[info[1]]["solo"].rank = 0;
                            tierList[info[1]]["solo"].leaguepoint = 0;
                        }

                        if(!teamflag)
                        {
                            tierList[info[1]]["team"].tier = "Îû≠ÌÅ¨ ÏóÜÏùå";
                            tierList[info[1]]["team"].rank = 0;
                            tierList[info[1]]["team"].leaguepoint = 0;
                        }
                        
                        DataBase.removeDataBase("tierlist");
                        DataBase.setDataBase("tierlist",JSON.stringify(tierList));
                    }     
                }
            }
        }
        else if(msg == "/Ïò§ÎäòÏùò Ïö¥ÏÑ∏")
        {
            try {
    
                let url = org.jsoup.Jsoup.connect("http://www.joongboo.com/news/articleList.html?sc_serial_code=SRN361&view_type=sm").get();

                var title_tag = url.select("#section-list > ul > li > div > h4 > a");

                var title = title_tag.toString().split("\n");

                var luck_url = "http://www.joongboo.com";

                var luck_date = [];

                for(var i=0;i<title.length;i++)
                {
                    Log.d(title[i].replace(/<[^>]+>/g,""));
                    if(title[i].replace(/<[^>]+>/g,"").startsWith("[Ïò§ÎäòÏùò Ïö¥ÏÑ∏]"))
                    {
                        luck_url += title_tag.attr("href");

                        luck_date = title[i].replace(/<[^>]+>/g,"").replace("[Ïò§ÎäòÏùò Ïö¥ÏÑ∏] ","").split(" ");
                        break;
                    }
                }

                var data = org.jsoup.Jsoup.connect(luck_url).get().select(".article-body > article > p");

                data = data.toString().replace(/&nbsp;/g,"");
                data = data.toString().replace(/<br>/g,"\n");
                data = data.toString().replace(/<p>/g,"\n");
                data = data.toString().replace(/<\/p>/g,"\n");
                data = data.toString().replace(/\n\n/g,"\n");

                replyMessage = luck_date[0] + " " + luck_date[1] + " " + luck_date[2] + " ÏûêÎ™Ω Ïö¥ÏÑ∏ ü¶≠\n"
                replyMessage += data;

    
            }catch(e)  {
                replyMessage = "ÏßÄÍ∏à Ïö¥ÏÑ∏Î•º ÌïòÌä∏Í∞Ä Ïïå Ïàò ÏóÜÏñ¥Ïöî. üòØ";
            }
        }
        else if(msg == "/Ï†êÏàò")
        {
            var jsonp = function(url)
            {
                var script = window.document.createElement('script');
                script.async = true;
                script.src = url;
                script.onerror = function()
                {
                    alert('Can not access JSONP file.')
                };
                var done = false;
                script.onload = script.onreadystatechange = function()
                {
                    if (!done && (!this.readyState || this.readyState === 'loaded' || this.readyState === 'complete'))
                    {
                        done = true;
                        script.onload = script.onreadystatechange = null;
                        if (script.parentNode)
                        {
                            return script.parentNode.removeChild(script);
                        }
                    }
                };
                window.document.getElementsByTagName('head')[0].appendChild(script);
            };

            var query = function (sql, callback) {
                var url = 'https://spreadsheets.google.com/a/google.com/tq?',
                    params = {
                        key: '1HChfMTew04Quy0LuWRckUW9ovmto5uZQ0NAyKmGQKx0',
                        tq: encodeURIComponent(sql),
                        tqx: 'responseHandler:' + callback
                    },
                    qs = [];
                for (var key in params) {
                    qs.push(key + '=' + params[key]);
                }
                url += qs.join('&');
                return jsonp(url); // JSONP ÎèÑÏö∞ÎØ∏ Ìò∏Ï∂ú
            }
            
            var my_callback = function (data) {
                data = parse(data); // Îç∞Ïù¥ÌÑ∞ parse
                //Î∂àÎü¨Ïò® Îç∞Ïù¥ÌÑ∞ Ï°∞Ïûë
                for (var i = 0; i < datas.length; i++) {
                    if (JSON.stringify(datas[i]) == JSON.stringify(data)) {
                        return false;
                    }
                }
                datas.push(data);
            
                // HTML Ìó§ÎçîÏùò Í∞íÏùÑ Ï∂îÏ∂ú
                var col = [];
                for (var i = 0; i < data.length; i++) {
                    for (var key in data[i]) {
                        if (col.indexOf(key) === -1) {
                            col.push(key);
                        }
                    }
                }
                // Î∞õÏïÑ Ïò® Îç∞Ïù¥ÌÑ∞ Ïª§Ïä§ÌÖÄ 
                var table = document.querySelector("#tagTable table");
                if (table === null || table == undefined) {
                    // ÎèôÏ†Å ÌÖåÏù¥Î∏î ÏÉùÏÑ±
                    table = document.createElement("table");
            
                    // HTML ÌÖåÏù¥Î∏î Ìó§Îçî ÏÉùÏÑ±
                    var tr = table.insertRow(-1);
                    for (var i = 0; i < col.length; i++) {
                        var th = document.createElement("th");
                        th.innerHTML = col[i];
                        tr.appendChild(th);
                    }
                    // HTML ÌÖåÏù¥Î∏î ROW ÏÉùÏÑ±
                    for (var i = 1; i < data.length; i++) {
                        tr = table.insertRow(-1);
                        for (var j = 0; j < col.length; j++) {
                            var text = data[i][col[j]];
                            var tabCell = tr.insertCell(-1);
                            tabCell.innerHTML = data[i][col[j]];
                            var text = data[i][col[j]];
                            //tabCell.click
                            tabCell.innerHTML = '<span class="select-data input-tag" data-tag="' + text + '">' + text + '</span>';
                            tabCell.setAttribute("onclick","setDataToTag('" + text + "');");
                            //tabCell.innerHTML = '<span class="select-data input-tag" data-tag="' + text + '" onclick="setDataToTag(\'' + text +'\')">' + text + '</span>';
                        }
                    }
                    // ÎßàÏßÄÎßâÏúºÎ°ú JSON Îç∞Ïù¥ÌÑ∞Î°ú ÏÉàÎ°ú ÎßåÎì† ÌÖåÏù¥Î∏îÏùÑ Ïª®ÌÖåÏù¥ÎÑàÏóê Ï∂îÍ∞Ä
                    var divContainer = document.getElementById("tagTable");
                    divContainer.innerHTML = "";
                    divContainer.appendChild(table);
                    $("#tagTable tr td").each(function(i, elem) {
                        if($(this).find(".select-data").text() != "") {
                            $(this).addClass("select-tag");
                        }
                    });
                } else {
                    // ÌÖåÏù¥Î∏î Ìñâ ÎèôÏ†Å Ï∂îÍ∞Ä
                    for (var i = 1; i < data.length; i++) {
                        var tr = table.insertRow();
                        for (var j = 0; j < col.length; j++) {
                            var tabCell = tr.insertCell(-1);
                            tabCell.innerHTML = data[i][col[j]];
                        }
                    }
                }
            
            }
            query('select *', 'my_callback');
        }
        else if(msg.startsWith("/Ï†ÑÏ†Å"))
        {
            try
            {
                var nickname = msg.replace("/Ï†ÑÏ†Å ","");
                if(nickname.length == 2)
                {
                    nickname = nickname[0] + " " + nickname[1];
                }

                var idData = getRiotId(nickname);
                
                if(!idData.status)
                {
                    nickname = idData.name;
                    var puuid = idData.puuid;

                    replyMessage = "ÏµúÍ∑º [ " + nickname + " ] ÎãòÏùò Í≤åÏûÑ Ï†ÑÏ†ÅÏûÖÎãàÎã§.\n\n";
                    
                    var matchId = getRiotMatchId(puuid);

                    var matchResult = ""

                    var winCnt = 0;

                    for(var i=0;i<matchId.length;i++)
                    {
                        var matchData = getRiotMatchData(matchId[i]);

                        for(var j=0;j<matchData.info.participants.length;j++)
                        {
                            if(puuid == matchData.info.participants[j].puuid)
                            {
                                matchResult += gameType[matchData.info.queueId] + " : " + championData[matchData.info.participants[j].championName] + " (" + matchData.info.participants[j].kills + "/" + matchData.info.participants[j].deaths + "/" + matchData.info.participants[j].assists + ") ";

                                if(matchData.info.participants[j].win)
                                {
                                    matchResult += "‚ù§ ÏäπÎ¶¨";
                                    winCnt++;
                                }
                                else
                                    matchResult += "üíî Ìå®Î∞∞";
                                break;
                            }
                        }
                        if(i != matchId.length-1)
                            matchResult += "\n";
                    }

                    replyMessage += winCnt + "Ïäπ " + (10-winCnt) + "Ìå® ÏäπÎ•† " + winCnt/10 * 100 + "%\n\n"
                    replyMessage += matchResult;
                }
                else
                {
                    replyMessage = "Ï°¥Ïû¨ÌïòÏßÄ ÏïäÎäî ÏÜåÌôòÏÇ¨Î™ÖÏù¥ÎûòÏöî. Ïò§ÌÉÄÎ•º ÌôïÏù∏Ìïú ÌõÑ Îã§Ïãú Í≤ÄÏÉâÌï¥ Ï£ºÏÑ∏Ïöî. üò•"
                }
            }
            catch(e)
            {
                replyMessage = "RiotÏóêÏÑú Ï†ïÎ≥¥Î•º Ï†ÑÎã¨Ìï¥ Ï£ºÏßÄ ÏïäÏïòÏäµÎãàÎã§. Ï°∞Í∏à ÏûàÎã§Í∞Ä Îã§Ïãú ÏãúÎèÑÌï¥ Ï£ºÏÑ∏Ïöî. üò•"
            }
        }
        else if(msg.startsWith("/ÌïòÍ∏∞ÌïòÎã§")){
            replyMessage = "Í≤åÏûÑ Ï§ë Î©òÌÉàÏù¥ ÎÇòÍ∞ÄÎ©¥ ÎàÑÎàÑÎ°ú ÎØ∏ÎìúÎ•º Îã¨Î¶¨Îäî ÌñâÎèôÏùÑ ÎßêÌï¥Ïöî. Îî∞ÎùºÌïòÎ©¥ Ïïà ÎêòÍ≤†Ï£†? üòî";
        }
        else if(msg.startsWith("/ÌïòÌä∏ÌïòÎã§")){
            replyMessage = "ÏÑ∏ÏÉÅÏóêÏÑú Ï†úÏùº ÏûòÏÉùÍ∏¥ Í∞ïÏïÑÏßÄÏòàÏöî. üòç";
        }
        else if(msg.startsWith("/ÌòÑÏù¥ÌïòÎã§")){
            replyMessage = "ÏÑ±ÌíàÏù¥ Ïñ¥ÏßàÍ≥† Ïû¨Ï£ºÍ∞Ä Îõ∞Ïñ¥ÎÇú ÏóÑÎßàÎ•º ÎßêÌï¥Ïöî. ü•∞";
        }
        else if(msg.startsWith("/ÌïòÌä∏ ÏàòÍ∏à")){
            replyMessage = "ÌïòÌä∏ Ïö©Îèà Ï¢Ä Ï£ºÏÑ∏Ïöî. ü§ë";
        }
        else if(msg.startsWith("/ÌòÑÏù¥ Ï∂úÍ∑º")){
            replyMessage = "ÏóÑÎßàÎäî 8Ïãú 30Î∂ÑÏóê Ï∂úÍ∑ºÌï¥Ïöî. üí¶";
        }
        else if(msg.startsWith("/ÌòÑÏù¥ Ìá¥Í∑º")){
            replyMessage = "ÏóÑÎßàÎäî 17Ïãú 30Î∂ÑÏóê Ìá¥Í∑ºÌï¥Ïöî. üíñ";
        }
        

        
    
        // To save database
        // else if(msg.equals("/save"))
        // {
        //     DataBase.setDataBase("tierList",JSON.stringify(saveTier));
        // }

        else if(msg.indexOf("ÌïòÌä∏ Î∞îÎ≥¥") != -1){
            if(blockId[sender] == undefined)
            {    
                var date = new Date();

                var mins = 1 * 60 * 60 * 1000;

                date.setTime(date.getTime() + mins);

                blockId[sender] = {}

                blockId[sender].time = date;
                blockId[sender].block = false;
                blockId[sender].image = ImageDB.getProfileImage();

                isAngry = true;
                
                replyMessage = "ÌïòÌä∏ Î∞îÎ≥¥ ÏïÑÎãàÏóêÏöî. üòî ÏÉÅÏ≤ò Î∞õÏïòÏúºÎãà " + sender + " ÎãòÍ≥º 1ÏãúÍ∞Ñ ÎèôÏïà Îßê Ïïà Ìï† Í±∞ÏòàÏöî. ü§ê";
            }          
        }

        if(!isAngry)
        {
            if(blockId[sender] != undefined)
            {
                if(blockId[sender].block)
                    replyMessage = "";
                else if(blockId[sender].time > new Date() && replyMessage != "")
                {
                    replyMessage = sender + "Îãò Îßê Í±∏ÏßÄ ÎßàÏÑ∏Ïöî. üò°";
                    blockId[sender].block = true;
                }

                if(blockId[sender].time < new Date())
                {
                    replyMessage = "Ïù¥Ï†ú Îßê Í±∏Ïñ¥ÎèÑ ÎèºÏöî. "+sender+"Îãò üòä";
                    delete blockId[sender]
                }
            } 
        }

        replier.reply(replyMessage);
    } 
}


//ÏïÑÎûò 4Í∞úÏùò Î©îÏÜåÎìúÎäî Ïï°Ìã∞ÎπÑÌã∞ ÌôîÎ©¥ÏùÑ ÏàòÏ†ïÌï†Îïå ÏÇ¨Ïö©Îê©ÎãàÎã§.
function onCreate(savedInstanceState, activity) {
  var textView = new android.widget.TextView(activity);
  textView.setText("Hello, World!");
  textView.setTextColor(android.graphics.Color.DKGRAY);
  activity.setContentView(textView);
}

function onStart(activity) {}

function onResume(activity) {}

function onPause(activity) {}

function onStop(activity) {}